#!/bin/bash
export PS1_HOSTNAME=${PS1_HOSTNAME:-$HOST}
export PS1_HOSTCOLOR=${PS1_HOSTCOLOR:-'$fg_bold[green]'}
export EDITOR=vim
export NICKNAME=iped


is_zsh() {
    [[ $(basename $SHELL) == "zsh" ]]
}
is_bash() {
    [[ $(basename $SHELL) == "bash" ]]
}


if is_zsh; then
    export PROMPT='%(?.%{'$PS1_HOSTCOLOR'%}.%{$fg[red]%})'$PS1_HOSTNAME'%{$fg_bold[cyan]%}[%~% ]%(?.%{$fg[green]%}.%{$fg[red]%})%B$ %b'
    HERE=$(dirname $0)
    ME="$0"
    if [[ ${SHOW_DIRTY_GIT_PROMPT:-false} ]]; then
        RPS1='$ZSH_THEME_GIT_PROMPT_PREFIX$(git_current_branch)$ZSH_THEME_GIT_PROMPT_SUFFIX'
    fi
fi

if is_bash; then
    HERE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    ME="${BASH_SOURCE[0]}"
fi

export PATH="$PATH:$HERE/bin:$(realpath $HERE/../git/bin)"

acti() {
    if [[ $# == 0 ]]; then
        CHOICES=$(ls */*/activate)
        ACTI=$(choose_one $CHOICES)
        if [[ $? != 0 ]]; then
            echo "No environments found"
            return -1;
        fi
    else
        ACTI="$1/bin/activate"
    fi
    source $ACTI
}

_f0() {
    is_zsh && echo "$funcstack[2]" || echo ${FUNCNAME[1]};
}

export BETTERSSH_CONFIG=$(realpath ~/.ssh/host-config.yml)
alias ssh="better-ssh"
alias sshh="better-ssh -h "

sshl() {
    sshh ${1}-l
}

anyconda() {
    # There is likely a better way to find active environment
    if [[ ! $CONDA_SHLVL > 0 ]]; then
        if [[ "$VIRTUAL_ENV" == "" ]]; then
            conda activate all;
        fi
    fi
}

alias jupyter='anyconda && jupyter'
alias imypy='anyconda && mypy --ignore-missing-imports'
alias flake8='anyconda && flake8 --max-line-length=88'
alias python='anyconda && python'


finddirs() {
    if [[ $# == 0 ]]; then
        echo "Provide filetype"
        return 1
    fi
    find $@ | sed 's|\(\./[^/]*/\).*|\1|g' | uniq
}

pydirs() {
    setopt NULL_GLOB
    DIRS=$(finddirs -name '*.py')
    for ENV_FILE in */*/activate; do
        ENV_DIR=$(dirname $(dirname $ENV_FILE))
        DIRS=$(grep -v $ENV_DIR <<< $DIRS)
    done
    DIRS=($(grep -v .jupyter <<< $DIRS))
    choose_one --multi $DIRS
}

if_nargs() {
    if [[ $# > 1 ]]; then
        shift
        echo "${@[*]}";
    else
        $1;
    fi
}

pyfiles() {
    for DIR in $@; do
        find $DIR -name '*.py' | grep -v '.ipynb' | grep -v '.vscode'
    done
}

black-dir() {
    DIRS=( $(if_nargs pydirs $@) )
    anyconda
    pyfiles $DIRS | xargs black
}

flake-dir() {
    DIRS=( $(if_nargs pydirs $@) )
    anyconda
    pyfiles $DIRS | xargs flake8 --max-line-length=88
}

mypy-dir() {
    DIRS=( $(if_nargs pydirs $@) )
    anyconda
    pyfiles $DIRS | xargs mypy
}

pylint-dir() {
    DIRS=( $(if_nargs pydirs $@) )
    anyconda
    flake-dir $DIRS
    mypy-dir $DIRS
}


host_from_arg() {
    # Remove before the colon
    HOST="${1%%:*}"
    if [[ $HOST != $1 ]]; then # there is a host portion
        echo "$HOST"
    else
        echo $(ssh-config - hostname)
    fi
}

copydown() {
    if [[ $# < 1 ]]; then
        echo "usage: $(_f0) [-f] [host:]source [dst]"
    fi

    FORCE=0
    if [[ $1 == '-f' ]]; then
        FORCE=1;
        shift
    fi

    LOCAL_PREFIX=""
    if [[ $# > 0 && $1 == "--local" ]]; then
        LOCAL_PREFIX="local/"
        shift
    fi

    # Remove pre-colon for filename
    FILE="${1#*:}"
    HOSTKEY=$(host_from_arg $1)
    if [[ $? != 0 ]]; then
        return 1
    fi

    PREFIX=$(ssh-config $HOSTKEY root-dir '~')
    HOST=$(ssh-config $HOSTKEY hostname $HOSTKEY)

    cur=$(realpath $(pwd) --relative-to ~)
    SRC=${PREFIX}/$cur/$FILE
    DST=$FILE
    if [[ $# > 1 ]]; then
        DST=$2
    fi
    if [[ -e $DST && $FORCE != 1 ]]; then
        echo "Delete $DST before proceeding"
        return 1
    fi
    scp -r $HOST:$SRC $DST
}

copyup() {
    if [[ $# < 1 ]]; then
        echo "usage: $(_f0) source [[host:]dst]"
    fi

    HOSTKEY=$(host_from_arg $2)
    if [[ $? != 0 ]]; then
        return 1;
    fi
    HOST=$(ssh-config $HOSTKEY hostname $HOSTKEY)
    PREFIX=$(ssh-config $HOSTKEY root-dir '~')

    DST=$(realpath $1 --relative-to ~)

    if [[ $# > 1 ]]; then
        MAN_DST=${2#*:}
        if [[ $MAN_DST != "" ]]; then
            DST=$MAN_DST
        fi
    fi

    set -x
    scp $1 $HOST:$PREFIX/$DST
}

xfcopy() {
    if [[ $# != 1 ]]; then
        echo "usage: $(_f0) filename"
        return 1;
    fi
    xclip -i -sel c -f < $1 | xclip -i -sel p
}
alias xcopy="xclip -i -sel c -f | xclip -i -sel p"
alias xopen='xdg-open'
